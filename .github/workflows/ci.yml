name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  JAVA_VERSION: '17'

jobs:
  # =============================================
  # 🧪 CODE QUALITY & TESTING
  # =============================================
  code-quality:
    name: 📊 Code Quality & Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 🔧 Install Dependencies
      run: |
        npm ci
        npm run pods:install || echo "CocoaPods not needed for CI"
        
    - name: 🏷️ Cache Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-
          
    - name: 📝 TypeScript Check
      run: npm run type-check
      
    - name: 🔍 ESLint
      run: npm run lint
      
    - name: 💅 Prettier Check
      run: npm run format:check
      
    - name: 🧪 Run Tests
      run: npm run test:ci
      env:
        CI: true
        
    - name: 📊 Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # =============================================
  # 🔒 SECURITY AUDIT
  # =============================================
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 🔍 Security Audit
      run: npm audit --audit-level=moderate
      
    - name: 📊 Dependency Check
      run: |
        npx depcheck --ignores="@types/*,eslint-*,prettier,jest,@testing-library/*"
        
    - name: 🛡️ License Check
      run: npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD'

  # =============================================
  # 📱 ANDROID BUILD
  # =============================================
  android-build:
    name: 🤖 Android Build
    runs-on: ubuntu-latest
    needs: [code-quality, security]
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: ☕ Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 🔧 Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: 📲 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Generate Debug APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
    - name: 📦 Upload APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 7

  # =============================================
  # 🍎 iOS BUILD (macOS only)
  # =============================================
  ios-build:
    name: 🍎 iOS Build
    runs-on: macos-latest
    needs: [code-quality, security]
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 💎 Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        working-directory: ios
        
    - name: 📲 Install Dependencies
      run: npm ci
      
    - name: 🥥 Install CocoaPods
      run: |
        cd ios
        pod install --repo-update
        
    - name: 🏗️ Build iOS
      run: |
        cd ios
        xcodebuild -workspace ReactNativeSkeleton.xcworkspace \
          -scheme ReactNativeSkeleton \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 14' \
          build

  # =============================================
  # 📊 PERFORMANCE ANALYSIS
  # =============================================
  performance:
    name: ⚡ Performance Analysis
    runs-on: ubuntu-latest
    needs: [code-quality]
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📲 Install Dependencies
      run: npm ci
      
    - name: 📊 Bundle Size Analysis
      run: |
        npm run build:analyze || echo "Bundle analysis not configured yet"
        
    - name: 🔍 Performance Audit
      run: |
        npx bundlesize || echo "Bundlesize not configured yet"

  # =============================================
  # 📋 BUILD SUMMARY
  # =============================================
  build-summary:
    name: 📋 Build Summary
    runs-on: ubuntu-latest
    needs: [android-build, ios-build, performance]
    if: always()
    
    steps:
    - name: 📊 Build Status Summary
      run: |
        echo "## 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Code Quality | ${{ needs.code-quality.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security | ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Android Build | ${{ needs.android-build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| iOS Build | ${{ needs.ios-build.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance | ${{ needs.performance.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY 